@model Ecommerce.Models.ProductVM

@{
    ViewData["Title"] = "Edit Product";
}

<h2>Edit Product</h2>

<h4>Product Information</h4>
<hr />
<div class="form-horizontal">
    <div class="row">
        <div class="col-md-12">
            <form asp-action="EditProduct">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCategory, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model =>model.ProductCategory.Id, new SelectList((IEnumerable<ProductCategoryVM>)ViewData["ProductCategories"],"Id","Name",Model.ProductCategory),
                                                                           "Select Category", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price.UnitPrice, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Price.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <input type="button" onclick="location.href='@Url.Action("Index", "Product")'" value="Cancel" class="btn btn-sm btn-default" />
                        <input type="button" onclick="location.href='@Url.Action("DeleteProduct", "Product", new {id = Model.Id})'" value="Delete" class="btn btn-sm btn-warning" />
                        <input type="submit" value="Save" class="btn btn-sm btn-success " />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
