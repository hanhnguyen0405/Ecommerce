@model Ecommerce.Models.ProductVM

@{
    ViewData["Title"] = "View Product";
}

<h2>View Product</h2>
<hr />

<div class="form-horizontal">
    <div class="row">
        <div class="col-md-12">
            <form asp-action="ViewProduct">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9 form-control-static">
                        @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9 form-control-static">
                        @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price.UnitPrice, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9 form-control-static">
                        @Html.DisplayFor(model => model.Price.UnitPrice, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Price.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCategory.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9 form-control-static">
                        @Html.DisplayFor(model => model.ProductCategory.Name, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.ProductCategory.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <input type="button" onclick="location.href='@Url.Action("EditProduct", "Product", new {id = Model.Id})'" value="Edit" class="btn btn-sm btn-info" />
                        <input type="button" onclick="location.href='@Url.Action("AddToOrder", "Product", new {id = Model.Id})'" value="Add To Cart" class="btn btn-sm btn-danger" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<br />
<br />
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
